apiVersion: v1
kind: Service
metadata:
  name: web-server-service
spec:
  selector:
    app: web-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-server
  template:
    metadata:
      labels:
        app: web-server
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nautilus.io/linstor
                operator: Exists
      containers:
      - name: web-server
        image: danswer/danswer-web-server:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        # There are some extra values since this is shared between services
        # There are no conflicts though, extra env variables are simply ignored
        envFrom:
        - configMapRef:
            name: env-configmap
        resources:
          limits:
            memory: 4Gi
            cpu: 2
          requests:
            memory: 2Gi
            cpu: 1
      tolerations:
      - effect: NoSchedule
        key: nautilus.io/sdsu-fix
        operator: Exists
      - effect: NoSchedule
        key: nautilus.io/csu-tide
        operator: Exists
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: haproxy
    ingress.kubernetes.io/allowlist-source-range: "130.191.0.0/16, 146.244.0.0/16"
  name: danswer-web-ingress
spec:
  rules:
  - host: sdsu-danswer.nrp-nautilus.io
    http:
      paths:
      - backend:
          service:
            name: web-server-service
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - sdsu-danswer.nrp-nautilus.io