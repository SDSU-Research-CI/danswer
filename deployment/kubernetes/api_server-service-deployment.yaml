apiVersion: v1
kind: Service
metadata:
  name: api-server-service
spec:
  selector:
    app: api-server
  ports:
    - name: api-server-port
      protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-server
  template:
    metadata:
      labels:
        app: api-server
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nautilus.io/linstor
                operator: Exists
      containers:
      - name: api-server
        image: danswer/danswer-backend:latest
        imagePullPolicy: IfNotPresent
        # command:
        #   - "/bin/sh"
        #   - "-c"
        #   - |
        #     alembic upgrade head &&
        #     echo "Starting Danswer Api Server" &&
        #     uvicorn danswer.main:app --host 0.0.0.0 --port 8080
        command: ["bash", "-c", "sleep 3600"]
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: danswer-secrets
              key: postgres_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: danswer-secrets
              key: postgres_password
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 4Gi
            cpu: 2
        ports:
        - containerPort: 8080
        # There are some extra values since this is shared between services
        # There are no conflicts though, extra env variables are simply ignored
        envFrom:
        - configMapRef:
            name: env-configmap
        volumeMounts:
        - name: dynamic-storage
          mountPath: /home/storage
        - name: file-connector-storage
          mountPath: /home/file_connector_storage
      volumes:
      - name: dynamic-storage
        persistentVolumeClaim:
          claimName: dynamic-pvc
      - name: file-connector-storage
        persistentVolumeClaim:
          claimName: file-connector-pvc
      tolerations:
      - effect: NoSchedule
        key: nautilus.io/sdsu-fix
        operator: Exists
      - effect: NoSchedule
        key: nautilus.io/csu-tide
        operator: Exists
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: haproxy
    ingress.kubernetes.io/allowlist-source-range: "130.191.0.0/16, 146.244.0.0/16"
  name: danswer-api-ingress
spec:
  rules:
  - host: sdsu-danswer-api.nrp-nautilus.io
    http:
      paths:
      - backend:
          service:
            name: api-server-service
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - sdsu-danswer-api.nrp-nautilus.io
